{
  "name": "node-notifier",
  "version": "2.0.4",
  "description": "A Node.js module for sending notifications on mac, windows and linux",
  "main": "index.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:mikaelbr/node-notifier.git"
  },
  "keywords": [
    "notification center",
    "mac os x 10.8",
    "notify",
    "terminal-notifier",
    "notify-send",
    "growl"
  ],
  "author": {
    "name": "Mikael Brevik"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.7.4",
    "should": "~1.2.1"
  },
  "dependencies": {
    "which": "~1.0.5",
    "growler": "0.0.1",
    "shellwords": "^0.1.0"
  },
  "readme": "# node-notifier\n\nA node module for sending notification using node. Uses terminal-notifier on mac,\nnotify-send for Linux and growl for others.\n\nFor mac this is a wrapper for the\n[terminal-notifier](https://github.com/alloy/terminal-notifier) application by\n[Eloy DurÃ¡n](https://github.com/alloy).\n\n## Requirements\n- Mac OS X (>= 10.8)\n- Linux with the notify-send module\n- Or Growl on Windows\n\nIf using Linux, `notify-send` must be installed on your system.\nHowever, [terminal-notifier](https://github.com/alloy/terminal-notifier), comes\nbundled in the module. So on Mac, not additional installations is necessary.\n\nIf using Windows/Growl, `growl` must be installed. For windows see\n[Growl for Windows](http://www.growlforwindows.com/gfw/). You can also use\ngrowl on mac, but you need to specify this manually (see API).\n\nBy default Notification Center will be used on Mac, notify-send will be used\non Linux, and Growl will be used if neither mac or linux.\n\n## Install\n```\n$ npm install node-notifier\n```\n\n## Standard Usage\n```javascript\nvar Notification = require('node-notifier');\n\nvar notifier = new Notification();\nnotifier.notify({\n\tmessage: 'Hello World'\n});\n```\n\n`Notification` also has specifications for all types of notifications, to be used\nmanually.\n\nExample:\n```javascript\nvar nn = require('node-notifier');\n\nnew nn.NotificationCenter().notify();\nnew nn.NotifySend().notify();\nnew nn.Growl().notify(options);\n```\n\n\n## Usage NotificationCenter\n\nSame usage and parameter setup as [terminal-notifier](https://github.com/alloy/terminal-notifier).\n\n### Example\n\nWhere [terminal-notifier](https://github.com/alloy/terminal-notifier) say to use the ```-message``` option, you can do this in node-notifier\n\n```javascript\nvar Notification = require('node-notifier');\n\nvar notifier = new Notification();\nnotifier.notify({\n\tmessage: 'Hello World'\n});\n```\n\n\nYou can specify the second argument as a callback for getting ```error``` and ```response```.\n\n```javascript\nvar Notification = require('node-notifier');\n\nvar notifier = new Notification();\nnotifier.notify({\n\ttitle: 'My application',\n\tmessage: 'New notification'\n}, function(error, response) {\n\tconsole.log(response);\n});\n```\n\nThe response will be given as an object. E.g., when running ```notifier.notify({list: \"ALL\"})```, this could be the response:\n\n```\n{ response:\n   [ { GroupID: null,\n       Title: 'Terminal',\n       Subtitle: null,\n       Message: 'Another message',\n       'Delivered At': Wed Dec 12 2012 15:23:38 GMT+0100 (CET) },\n     { GroupID: null,\n       Title: 'Terminal',\n       Subtitle: null,\n       Message: 'Another message',\n       'Delivered At': Wed Dec 12 2012 15:23:31 GMT+0100 (CET) },\n     { GroupID: 2,\n       Title: 'Terminal',\n       Subtitle: null,\n       Message: 'Testing',\n       'Delivered At': Wed Dec 12 2012 15:22:41 GMT+0100 (CET) },\n     { GroupID: 1,\n       Title: 'Terminal',\n       Subtitle: null,\n       Message: 'Testing',\n       'Delivered At': Wed Dec 12 2012 15:22:29 GMT+0100 (CET) } ],\n  type: 'list' }\n\n```\n\nThere are three different types:\n\n- ```deliviered``` when a message is delivered.\n- ```removed``` when all or one message is removed. If all messages are removed, the response property will have several elements.\n- ```list``` when a list is presented. Even when doing ```list: 1```.\n\n## Usage NotifySend\n\n```javascript\nvar Notification = require('node-notifier');\n\nvar notifier = new Notification();\nnotifier.notify({\n\ttitle: 'Foo',\n\tmessage: 'Hello World'\n\t// .. and other notify-send flags\n});\n```\n\n## Usage NotifySend\n\n```javascript\nvar Notification = require('node-notifier');\n\nvar notifier = new Notification({\n\t// Options as passed to Growler\n});\nnotifier.notify({\n\ttitle: 'Foo',\n\tmessage: 'Hello World'\n\t// and other growl options like sticky etc.\n});\n```\n\nSee more information for constructor options in\n[growler](https://github.com/betamos/Node-Growler/).\n\n## Module TODO\n\n1. Add tests for notify-send and growl\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mikaelbr/node-notifier/issues"
  },
  "homepage": "https://github.com/mikaelbr/node-notifier",
  "_id": "node-notifier@2.0.4",
  "dist": {
    "shasum": "6cc32d07de38a635437167b9d3a1ef7cc1893437"
  },
  "_from": "node-notifier@^2.0.4",
  "_resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-2.0.4.tgz"
}
